openapi: "3.0.0"
info:
  title: TODO API Document
  version: "0.0.1"
  description: TODO API のドキュメントです
tags:
  - name: opts
    description: 運用監視関連のAPI
  - name: tasks
    description: タスク関連のAPI
  - name: dashboard
    description: ダッシュボードのAPI
paths:
  /health:
    get:
      tags:
        - opts
      responses:
        '200':
          description: OK
  /dashboard:
    get:
      summary: "ピン留めタスク一覧取得"
      description: "ピン留めしたタスクを4件取得します"
      operationId: "dashboardTasks"
      tags:
        - dashboard
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListDto"
  /tasks/:
    get:
      summary: "タスク一覧取得"
      description: "タスクの一覧を取得できます"
      operationId: "listTasks"
      tags:
        - tasks
      parameters:
        - name: title
          in: query
          required: false
          description: "タスクのタイトル"
          schema:
            type: string
            maxLength: 256
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListDto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
    post:
      summary: "タスク作成"
      description: "タスクを新規作成します"
      operationId: "createTask"
      tags:
        - tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreateForm"
      responses:
        201:
          description: "Created"
          headers:
            location:
              description: "作成されたリソースのURI"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDto"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
    put:
      summary: "タスクピン留め"
      description: "指定されたタスクをピン留めします"
      operationId: "pinnedTask"
      tags:
        - tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskPinForm"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
  /tasks/{taskId}:
    get:
      summary: "タスク取得"
      description: "指定されたIDのタスクを1件取得します"
      tags:
        - tasks
      operationId: showTask
      parameters:
        - name: taskId
          in: path
          required: true
          description: "詳細を取得するタスクのID"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDto"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    put:
      summary: "タスク更新"
      description: "指定されたタスクをリクエストボディの内容で上書きします"
      operationId: "editTask"
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: "更新するタスクのID"
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUpdateForm"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    delete:
      summary: "タスク削除"
      description: "指定されたタスクを削除します"
      operationId: "deleteTask"
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: "更新するタスクのID"
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: "No Content"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
components:
  schemas:
    TaskCreateForm:
      type: object
      properties:
        title:
          type: string
          description: "作成されるタスクのタイトル"
          maxLength: 256
          minLength: 1
        content:
          type: string
          description: "タスクの内容"
          maxLength: 256
      required:
        - title
    TaskUpdateForm:
      type: object
      properties:
        title:
          type: string
          description: "作成されるタスクのタイトル"
          maxLength: 256
          minLength: 1
        content:
          type: string
          description: "タスクの内容"
          maxLength: 256
        compF:
          type: integer
          format: int32
          description: "タスクの完了フラグ"
      required:
        - title
        - compF
    TaskDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "タスクID"
        title:
          type: string
          description: "タスクのタイトル"
        content:
          type: string
          description: "タスクの内容"
        compF:
          type: integer
          description: "タスクの完了フラグ"
        pinF:
          type: integer
          description: "タスクのピン留めフラグ"
      required:
        - id
        - title
        - compF
        - pinF
    TaskPinForm:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "タスクID"
        pinF:
          type: integer
          format: int32
          description: "タスクのピン留めフラグ"
      required:
        - id
        - pinF
    PageDto:
      description: "ページング情報"
      type: object
      properties:
        limit:
          description: "リクエストされた limit"
          type: integer
          format: int32
        offset:
          description: "リクエストされた offset"
          type: integer
          format: int64
        size:
          description: "取得できた件数"
          type: integer
          format: int32
      required:
        - limit
        - offset
        - size
    TaskListDto:
      description: "タスクのリスト"
      type: object
      properties:
        page:
          $ref: "#/components/schemas/PageDto"
        results:
          type: array
          items:
            $ref: "#/components/schemas/TaskDto"
      required:
        - results
    ResourceNotFoundError:
      description: "指定したリソースが存在しない"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Resource Not Found"
        detail:
          type: string
          description: "エラーの詳細"
      required:
        - title
        - detail
    BadRequestError:
      description: "リクエストが不正"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Bad Request"
        detail:
          type: string
          description: "エラーの詳細"
          default: "リクエストが不正です。正しいリクエストでリトライしてください"
        invalid-params:
          type: array
          items:
            $ref: "#/components/schemas/InvalidParam"
      required:
        - title
        - detail
        - invalid-params
    InvalidParam:
      description: "不正なリクエストについての詳細"
      type: object
      properties:
        name:
          type: string
          description: "エラーが発生したフィールド名"
        reason:
          type: string
          description: "エラーの理由"
      required:
        - name
        - reason